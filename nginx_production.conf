worker_processes auto;
error_log /var/log/nginx/error.log;
worker_rlimit_nofile 100000;
events {
    worker_connections  2048;
    multi_accept on;
    use epoll;
}

http {
    charset UTF-8;
    server_tokens off;
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 10;
    client_header_timeout 10;
    client_body_timeout 10;
    reset_timedout_connection on;
    send_timeout 10;
    limit_conn_zone $binary_remote_addr zone=addr:5m;
    limit_conn  addr  100;
    gzip on;
    gzip_http_version 1.0;
    gzip_disable     "msie6";
    gzip_proxied any;
    gzip_min_length 1024;
    gzip_comp_level 6;
    gzip_types text/plain text/css application/x-javascript text/xml application/xml application/xml+rss text/javascript application/javascript application/json;
    open_file_cache max=100 inactive=20s;
    open_file_cache_valid 30s;
    open_file_cache_min_uses 2;
    open_file_cache_errors on;
    log_format  ltsv  'time:$time_iso8601\t'
                  'host:$remote_addr\t'
                  'method:$request_method\t'
                  'uri:$request_uri\t'
                  'status:$status\t'
                  'size:$body_bytes_sent\t'
                  'reqtime:$request_time\t'
                  'apptime:$upstream_response_time\t'
                  'referer:$http_referer\t'
                  'ua:$http_user_agent\t';
    access_log off;
    #access_log /var/log/nginx/access.log ltsv;
    include       /etc/nginx/mime.types;
    default_type text/html;

    upstream unicorn {
        server unix:/var/www/translate_curation/shared/tmp/sockets/unicorn.sock
        fail_timeout=0;
    }

    server {
      listen 80 default_server;
      listen [::]:80 default_server;
      location / {
        empty_gif;
        access_log off;
        break;
      }
    }

    server {
        listen 80;
        listen [::]:80;
        client_max_body_size 4G;
        server_name pop-crunch-japan.info;
        root  /var/www/translate_curation/public;

        if ($http_x_forwarded_proto != https) {
          return 301 https://$host$request_uri;
        }

      location ~ ^/assets/ {
            root    /var/www/translate_curation/current/public;
            gzip_static on;
            expires 7d;
            add_header Cache-Control public;
       }

       location / {
            proxy_pass http://unicorn;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Host $host;
        }
        error_page   500 502 503 504  /500.html;
        location = /500.html {
            root /var/www/translate_curation/current/public;
        }
    }
}